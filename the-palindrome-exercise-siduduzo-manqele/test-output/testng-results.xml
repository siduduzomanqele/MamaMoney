<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-09T14:27:41 SAST" name="AllTests" finished-at="2021-08-09T14:29:12 SAST" duration-ms="91289">
    <groups>
    </groups>
    <test started-at="2021-08-09T14:27:41 SAST" name="PositiveTests-CH" finished-at="2021-08-09T14:29:12 SAST" duration-ms="91289">
      <class name="mamaMoney.palindrome.tests.PalandromeTest">
        <test-method is-config="true" signature="classLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:27:41 SAST" name="classLevelSetup" finished-at="2021-08-09T14:27:44 SAST" duration-ms="2377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelSetup -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:27:44 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:27:44 SAST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:27:44 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:28:44 SAST" duration-ms="60071" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=Yes! stats reversed is stats, testID=1, text=stats, testDescription=we are testing word [stats] If is palindrome}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.0.0-alpha-7', revision: 'de8579b6d5'
System info: host: 'LSIDUDUZOM', ip: '192.168.18.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15'
Driver info: driver.version: RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\Users\siduduzom\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:54986}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 19d9784bbcd8b68f632d5e8e1dd3f01f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.0.0-alpha-7', revision: 'de8579b6d5'
System info: host: 'LSIDUDUZOM', ip: '192.168.18.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15'
Driver info: driver.version: RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\Users\siduduzom\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:54986}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 19d9784bbcd8b68f632d5e8e1dd3f01f
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:522)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:273)
at mamaMoney.palindrome.pages.HomePage.openHomePage(HomePage.java:20)
at mamaMoney.palindrome.tests.PalandromeTest.allPalindromeTests(PalandromeTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:72)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:47)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:60)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:123)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:501)
... 31 more
Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:10650 after 60000 ms
at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2063)
at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:201)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:57)
... 40 more
Caused by: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:10650 after 60000 ms
at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43)
at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50)
at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:672)
at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:747)
at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:472)
at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:44 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:28:52 SAST" duration-ms="8538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=Yes! step on no pets reversed is step on no pets, testID=2, text=step on no pets, testDescription=we are testing phrase [step on no pets] if is palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:44 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:28:44 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:52 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:28:55 SAST" duration-ms="2806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=Yes! 1001 reversed is 1001, testID=3, text=1001, testDescription=we are testing number [1001] if is Palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:52 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:28:52 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:55 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:28:57 SAST" duration-ms="2398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=Yes! 12/11/21 reversed is 12/11/21, testID=4, text=12/11/21, testDescription=we are testing date 12/11/21 if is palidrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:55 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:28:55 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:57 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:28:57 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:57 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:28:58 SAST" duration-ms="753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=Yes! alt22tla reversed is alt22tla, testID=5, text=alt22tla, testDescription=we are testing character [alt22tla] If is palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:58 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:29:05 SAST" duration-ms="6733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=No! mama reserved is amam, testID=6, text=mama, testDescription=we are testing word [mama] If is not palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:28:58 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:28:58 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:05 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:29:05 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:05 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:29:06 SAST" duration-ms="1388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=No! 2021 reserved is 1202, testID=7, text=2021, testDescription=we are testing year [2021] if is not palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:06 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:29:06 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:06 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:29:09 SAST" duration-ms="2419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=No! 3535 reserved is 5353, testID=8, text=3535, testDescription=we are testing number [3535] if is not palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:09 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:29:09 SAST" duration-ms="747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=No! 18/10/21 reserved is 12/01/81, testID=9, text=18/10/21, testDescription=we are testing date [18/10/21] if is not palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:09 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:29:09 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="allPalindromeTests(java.util.Map)[pri:1, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:09 SAST" name="allPalindromeTests" data-provider="csvReader" finished-at="2021-08-09T14:29:12 SAST" duration-ms="2380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{palidromeExpectedMessage=No! Pep reserved is peP, testID=10, text=Pep, testDescription=we are testing case sensitive palidrome word [Pep] if is not palindrome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPalindromeTests -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:09 SAST" name="methodLevelSetup" finished-at="2021-08-09T14:29:09 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:mamaMoney.palindrome.tests.PalandromeTest@16ec5519]" started-at="2021-08-09T14:29:12 SAST" name="teardown" finished-at="2021-08-09T14:29:12 SAST" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- mamaMoney.palindrome.tests.PalandromeTest -->
    </test> <!-- PositiveTests-CH -->
  </suite> <!-- AllTests -->
</testng-results>
